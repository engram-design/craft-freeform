/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/components/cp/fields/field-editor.js":
/*!**************************************************!*\
  !*** ./src/components/cp/fields/field-editor.js ***!
  \**************************************************/
/***/ (function() {

eval("// eslint-disable no-undef\n$(function () {\n  var $typeSelect = $('select#type');\n  $typeSelect.on({\n    change: function change() {\n      var type = $(this).val();\n      $('.field-settings[data-type=' + type + ']').show().siblings().hide();\n    }\n  });\n  $typeSelect.trigger('change');\n  var $table = $('table.value-group');\n  $table.each(function () {\n    var $sorter = new Craft.DataTableSorter($(this), {\n      helperClass: 'editabletablesorthelper',\n      copyDraggeeInputValuesToHelper: true\n    });\n    $(this).data('sorter', $sorter);\n  });\n  var $customValueSwitch = $(\"input[name$='[customValues]']\").parents('.lightswitch');\n  $customValueSwitch.on({\n    change: function change() {\n      var isOn = $('input', this).val();\n\n      if (isOn) {\n        $table.filter(\":not([data-type='dynamic_recipients'])\").removeClass('hide-custom-values');\n      } else {\n        $table.filter(\":not([data-type='dynamic_recipients'])\").addClass('hide-custom-values');\n      }\n    }\n  });\n  $customValueSwitch.trigger('change');\n  $('.value-group + .btn.add').on({\n    click: function click() {\n      var $parentTable = $(this).prev('table.value-group');\n      var type = $parentTable.data('type');\n      var isMultiple = $parentTable.data('isMultiple') !== undefined;\n      var $tr = $('<tr>').append($('<td>', {\n        class: 'textual field-label'\n      }).append($('<textarea>', {\n        val: '',\n        rows: 1,\n        name: 'types[' + type + '][labels][]'\n      }))).append($('<td>', {\n        class: 'textual field-value'\n      }).append($('<textarea>', {\n        val: '',\n        rows: 1,\n        class: 'code',\n        name: 'types[' + type + '][values][]'\n      }))).append($('<td>').append($('<input>', {\n        type: 'hidden',\n        value: 0,\n        class: 'code',\n        name: 'types[' + type + '][checked][]'\n      })).append($('<input>', {\n        type: isMultiple ? 'checkbox' : 'radio',\n        name: type + '_is_checked',\n        checked: false\n      }))).append($('<td>', {\n        class: 'thin action'\n      }).append($('<a>', {\n        class: 'move icon',\n        title: Craft.t('Reorder')\n      }))).append($('<td>', {\n        class: 'thin action'\n      }).append($('<a>', {\n        class: 'delete icon',\n        title: Craft.t('Delete')\n      })));\n      $('tbody', $parentTable).append($tr);\n      $parentTable.find('tbody > tr:last > td:first textarea:first').focus();\n      $parentTable.data('sorter').addItems($tr);\n    }\n  });\n  var keyRange = [9, 16, 17, 18, 19, 20, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 91];\n  $table.on({\n    click: function click() {\n      $(this).parents('tr:first').remove();\n    }\n  }, 'tr td.action .icon.delete').on({\n    keyup: function keyup(event) {\n      var keyCode = event.which ? event.which : event.keyCode;\n\n      if (keyRange.includes(keyCode)) {\n        return false;\n      }\n\n      var $val = $(this).val();\n      var $tr = $(this).parents('tr:first');\n      $('td.field-value > textarea', $tr).val($val);\n    }\n  }, 'td.field-label > textarea').on({\n    click: function click() {\n      var $tbody = $(this).parents('tbody:first');\n      var isChecked = $(this).is(':checked');\n      var isRadio = $(this).is(':radio');\n\n      if (isRadio && isChecked) {\n        $('input:hidden', $tbody).val(0);\n      }\n\n      $(this).siblings('input:hidden').val(isChecked ? 1 : 0);\n    }\n  }, 'input:checkbox, input:radio');\n  var $dateTimeTypeSelector = $('#dateTimeTypeSelector');\n  $dateTimeTypeSelector.on({\n    change: function change() {\n      var val = $(this).val();\n      var date = $('#date-time-date');\n      var clock = $('#date-time-clock');\n\n      switch (val) {\n        case 'date':\n          date.show();\n          clock.hide();\n          break;\n\n        case 'time':\n          date.hide();\n          clock.show();\n          break;\n\n        default:\n          date.show();\n          clock.show();\n          break;\n      }\n    }\n  });\n  $dateTimeTypeSelector.trigger('change');\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/cp/fields/field-editor.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/components/cp/fields/field-editor.js"]();
/******/ 	
/******/ })()
;