/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/components/cp/submissions/element-index.js":
/*!********************************************************!*\
  !*** ./src/components/cp/submissions/element-index.js ***!
  \********************************************************/
/***/ (function() {

eval("function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// eslint-disable no-undef\nif (_typeof(Craft.Freeform) === ( true ? \"undefined\" : 0)) {\n  Craft.Freeform = {};\n}\n\nvar getDefaultSourceKey = function getDefaultSourceKey() {\n  // Did they request a specific category group in the URL?\n  var defaultFormHandle = window.defaultFormHandle;\n\n  if (this.settings.context === 'index' && typeof defaultFormHandle !== 'undefined') {\n    for (var i = 0; i < this.$sources.length; i++) {\n      var $source = $(this.$sources[i]);\n\n      if ($source.data('handle') === defaultFormHandle) {\n        return $source.data('key');\n      }\n    }\n  }\n\n  return this.base();\n};\n\nvar updateButton = function updateButton() {\n  if (!this.$source) {\n    return;\n  }\n\n  var handle = this.$source.data('handle');\n\n  if (this.settings.context === 'index' && typeof history !== 'undefined') {\n    var uri = this.baseUrl;\n\n    if (handle) {\n      uri += '/' + handle;\n    }\n\n    history.replaceState({}, '', Craft.getUrl(uri));\n  }\n};\n\nCraft.Freeform.SubmissionsIndex = Craft.BaseElementIndex.extend({\n  baseUrl: 'freeform/submissions',\n  afterInit: function afterInit() {\n    this.on('selectSource', $.proxy(this, 'updateButton'));\n    this.on('selectSite', $.proxy(this, 'updateButton'));\n    this.base();\n  },\n  getViewClass: function getViewClass(mode) {\n    switch (mode) {\n      case 'table':\n        return Craft.Freeform.SubmissionsTableView;\n\n      default:\n        return this.base(mode);\n    }\n  },\n  getDefaultSort: function getDefaultSort() {\n    return ['dateCreated', 'desc'];\n  },\n  getDefaultSourceKey: getDefaultSourceKey,\n  updateButton: updateButton\n});\nCraft.Freeform.SpamSubmissionsIndex = Craft.BaseElementIndex.extend({\n  baseUrl: 'freeform/spam',\n  reasonContainer: null,\n  reasonMenuBtn: null,\n  selectedReason: null,\n  getDefaultSourceKey: getDefaultSourceKey,\n  afterInit: function afterInit() {\n    var _this = this;\n\n    this.reasonContainer = $('<div></div>');\n    this.reasonContainer.append($('#spam-reasons').html());\n    this.reasonMenuBtn = $('.btn.menubtn', this.reasonContainer);\n    this.$statusMenuContainer.before(this.reasonContainer);\n    $('*[data-reason]', this.reasonContainer).on({\n      click: function click(event) {\n        var target = event.target;\n        var reason = $(target).data('reason');\n        var label = $(target).text();\n        $(target).addClass('sel').parent().siblings().find('a').removeClass('sel');\n\n        _this.reasonMenuBtn.text(label);\n\n        _this.selectedReason = reason;\n        _this.settings.criteria = _objectSpread(_objectSpread({}, _this.settings.criteria), {}, {\n          spamReason: reason\n        });\n\n        _this.updateElements();\n      }\n    });\n    this.on('selectSource', $.proxy(this, 'updateButton'));\n    this.on('selectSite', $.proxy(this, 'updateButton'));\n    this.base();\n  },\n  updateButton: updateButton\n}); // Register the Freeform SubmissionsIndex class\n\nCraft.registerElementIndexClass('Solspace\\\\Freeform\\\\Elements\\\\Submission', Craft.Freeform.SubmissionsIndex);\nCraft.registerElementIndexClass('Solspace\\\\Freeform\\\\Elements\\\\SpamSubmission', Craft.Freeform.SpamSubmissionsIndex);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/cp/submissions/element-index.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/components/cp/submissions/element-index.js"]();
/******/ 	
/******/ })()
;