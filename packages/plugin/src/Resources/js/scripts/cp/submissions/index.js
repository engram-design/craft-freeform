/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/components/cp/submissions/index.js":
/*!************************************************!*\
  !*** ./src/components/cp/submissions/index.js ***!
  \************************************************/
/***/ (function() {

eval("function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// eslint-disable no-undef\n$(function () {\n  var $statusSelect = $('#status-menu-btn');\n  var menu = $statusSelect.data('menubtn');\n\n  if (menu) {\n    menu.setSettings({\n      onOptionSelect: function onOptionSelect(data) {\n        var id = $(data).data('id');\n        var name = $(data).data('name');\n        var color = $(data).data('color');\n        var $status = $('#status-menu-select');\n        $('#statusId').val(id);\n        var html = \"<span class='status \" + color + \"'></span>\" + Craft.uppercaseFirst(name);\n        $statusSelect.html(html);\n        $status.find('li a.sel').removeClass('sel');\n        $status.find('li a[data-id=' + id + ']').addClass('sel');\n      }\n    });\n  }\n\n  var $assetDownloadForm = $('form#asset_download');\n  $('#content').on({\n    click: function click() {\n      var _$$data = $(this).data(),\n          assetId = _$$data.assetId;\n\n      $('input[name=assetId]', $assetDownloadForm).val(assetId);\n      $assetDownloadForm.submit();\n    }\n  }, 'a[data-asset-id]');\n  $('canvas[data-image]').each(function () {\n    var canvas = $(this)[0];\n    var img = new window.Image();\n    img.addEventListener('load', function () {\n      canvas.getContext('2d').drawImage(img, 0, 0);\n    });\n    img.setAttribute('src', $(this).data('image'));\n  });\n  var signatureLinksWrapper = $('.download-signature-links');\n  $('a[data-type]', signatureLinksWrapper).on('click', function () {\n    var canvas = $(this).parents('.signature-wrapper').find('canvas:first')[0];\n    var type = $(this).data('type');\n    var link = document.createElement('a');\n    link.download = \"signature.\".concat(type);\n    link.href = canvas.toDataURL(\"image/\".concat(type)).replace(\"image/\".concat(type), 'image/octet-stream');\n    link.click();\n    return false;\n  });\n  $('#export-btn').remove();\n  $('#delete-button').on('click', function () {\n    if (!confirm(Craft.t('freeform', 'Are you sure you want to delete this?'))) {\n      return;\n    }\n\n    $(this).attr('disabled', true).addClass('disabled').text('Deleting...');\n    var id = $(this).data('id');\n    $.ajax({\n      type: 'post',\n      url: Craft.getCpUrl('freeform/spam/delete'),\n      dataType: 'json',\n      data: _defineProperty({\n        id: id\n      }, Craft.csrfTokenName, Craft.csrfTokenValue),\n      success: function success(response) {\n        if (response.success) {\n          window.location.href = Craft.getCpUrl('freeform/spam');\n        } else {\n          console.error('Could not delete spam submission');\n        }\n      }\n    });\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/cp/submissions/index.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/components/cp/submissions/index.js"]();
/******/ 	
/******/ })()
;